## Generated mta.yaml based on template version 0.4.0
## appName = cpapp
## language=nodejs; multitenant=false
## approuter=
_schema-version: '3.2'
ID: cpapp
version: 1.0.0
description: "A simple CAP project."
parameters:
  deploy_mode: html5-repo
  enable-parallel-deployments: true

build-parameters:
  before-all:
  - builder: custom
    commands:
    - npm install --production
    - npx -p @sap/cds-dk cds build --production
    - npx rimraf gen/db/src/gen/data

modules:
 # --------------------- SERVER MODULE ------------------------
- name: cpapp-srv
 # ------------------------------------------------------------
  type: nodejs
  path: gen/srv
  requires:
  # Resources extracted from CAP configuration
  - name: cpapp-db
  - name: cpapp-uaa
  - name: cpapp-logs
  provides:
  - name: srv-api      # required by consumers of CAP services (e.g. approuter)
    properties:
      srv-url: ${default-url}
  build-parameters:
    ignore: ["node_modules/", "default-env.json"]

 # -------------------- SIDECAR MODULE ------------------------
- name: cpapp-db-deployer
 # ------------------------------------------------------------
  type: hdb
  path: gen/db
  parameters:
    buildpack: nodejs_buildpack  
  requires:
    # 'hana' and 'xsuaa' resources extracted from CAP configuration
  - name: cpapp-db
  - name: cpapp-uaa
  - name: cpapp-logs
  build-parameters:
     ignore: ["node_modules/", "default-env.json"]

 # -------------------- DESTIN  MODULE ------------------------
- name: cpapp-destinations
 # ------------------------------------------------------------
  type: com.sap.application.content
  requires:
  - name: cpapp-uaa
    parameters:
      service-key:
        name: cpapp-uaa-key
  - name: cpapp-html5-repo-host
    parameters:
      service-key:
        name: cpapp-html5-repo-host-key
  - name: srv-api
  - name: cpapp-destination
    parameters:
      content-target: true
  parameters:
    content:
      instance:
        destinations:
        - Authentication: OAuth2UserTokenExchange
          Name: cpapp-app-srv
          TokenServiceInstanceName: cpapp-uaa
          TokenServiceKeyName: cpapp-uaa-key
          URL: '~{srv-api/srv-url}'
          sap.cloud.service: cpapp.service
        - Name: cpapp-html5-repo-host
          ServiceInstanceName: cpapp-html5-repo-host
          ServiceKeyName: cpapp-html5-repo-host-key
          sap.cloud.service: cpapp.service
        - Authentication: OAuth2UserTokenExchange
          Name: cpapp-uaa
          ServiceInstanceName: cpapp-uaa
          ServiceKeyName: cpapp-uaa-key
          sap.cloud.service: cpapp.service
        existing_destinations_policy: update
  build-parameters:
    ignore: ["node_modules/", "default-env.json"]
    no-source: true

 # -------------------- CONTENT DEPLOYER MODULE ------------------------
- name: cpapp-app-content
 # ---------------------------------------------------------------------
  type: com.sap.application.content
  path: .
  requires:
  - name: cpapp-html5-repo-host
    parameters:
      content-target: true
  build-parameters:
    build-result: resources
    requires:
    - artifacts:
      - nsrisks.zip
      name: nsrisks
      target-path: resources/
    - artifacts:
      - nsmitigations.zip
      name: nsmitigations
      target-path: resources/

 # -------------------- RISKS MODULE ------------------------
- name: nsrisks
 # ----------------------------------------------------------
  type: html5
  path: app/risks
  requires:
  - name: cpapp-logs
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []

 # -------------------- MITIGATION MODULE ---------------------
- name: nsmitigations
 # ------------------------------------------------------------
  type: html5
  path: app/mitigations
  requires:
  - name: cpapp-logs
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []

resources:
 # services extracted from CAP configuration
 # 'service-plan' can be configured via 'cds.requires.<name>.vcap.plan'

# ------------------------------------------------------------
- name: cpapp-db
# ------------------------------------------------------------
  type: com.sap.xs.hdi-container
  parameters:
    service: hana  # or 'hanatrial' on trial landscapes
    service-plan: hdi-shared
  properties:
    hdi-service-name: ${service-name}

# ------------------------------------------------------------
- name: cpapp-uaa
# ------------------------------------------------------------
  type: org.cloudfoundry.managed-service
  parameters:
      service: xsuaa
      service-plan: application
      path: ./xs-security.json
      config:
        xsappname: cpapp-${space}    #  name + space dependency
        tenant-mode: dedicated
        role-collections:
        - name: 'RiskManager-${space}'
          description: Manage Risks
          role-template-references:
          - $XSAPPNAME.RiskManager
        - name: 'RiskViewer-${space}'
          description: View Risks
          role-template-references:
          - $XSAPPNAME.RiskViewer

# ------------------------------------------------------------
- name: cpapp-destination
# ------------------------------------------------------------
  type: org.cloudfoundry.managed-service
  parameters:
    config:
      HTML5Runtime_enabled: true
      init_data:
        instance:
          destinations:
          - Authentication: NoAuthentication
            Name: ui5
            ProxyType: Internet
            Type: HTTP
            URL: https://ui5.sap.com
          existing_destinations_policy: update
      version: 1.0.0
    service: destination
    service-plan: lite

# ------------------------------------------------------------
- name: cpapp-html5-repo-host
# ------------------------------------------------------------
  type: org.cloudfoundry.managed-service
  parameters:
    service: html5-apps-repo
    service-plan: app-host

# ------------------------------------------------------------
- name: cpapp-logs
# ------------------------------------------------------------
  type: org.cloudfoundry.managed-service
  parameters:
    service: application-logs
    service-plan: lite